@page "/accounts"
@rendermode InteractiveServer

@using AGDPMS.Shared.Models
@using AGDPMS.Web.Data
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations

@attribute [Authorize(Roles = "Admin")]

@inject UserDataAccess UserDataAccess
@inject RoleDataAccess RoleDataAccess

<PageTitle>Account List</PageTitle>

<h3>AccountList</h3>

<a href="/">Home</a>
<button type="button" @onclick="() => _showAddForm = true">Add account</button>
<table border="1">
    <tr>
        <th>Id</th>
        <th>Full Name</th>
        <th>Phone Number</th>
        <th>Role</th>
        <th>Need Change Password</th>
        <th>Actions</th>
    </tr>
    @foreach (var user in _users)
    {
        <tr>
            <td>@user.Id</td>
            <td>@user.FullName</td>
            <td>@user.PhoneNumber</td>
            <td>@user.Role.Name</td>
            <td>@user.NeedChangePassword</td>
            <td></td>
        </tr>
    }
</table>

@if (_showAddForm)
{
    <hr />
    <h4>Add an account</h4>
    <AddAccountForm Roles="_roles" OnAccountAdded="HandleAccountAdded" OnCancel="() => _showAddForm = false" />
}

@code {
    private IEnumerable<AppUser> _users = [];
    private IEnumerable<AppRole> _roles = [];
    private bool _showAddForm = false;

    protected override async Task OnInitializedAsync()
    {
        _users = await UserDataAccess.GetAllAsync();
        _roles = await RoleDataAccess.GetAllAsync();
    }

    private async Task HandleAccountAdded(AppUser user)
    {
        _users = await UserDataAccess.GetAllAsync();
    }
}
