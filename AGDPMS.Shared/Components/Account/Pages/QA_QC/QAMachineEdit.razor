    @page "/qa/machines/edit/{id:int}"
    @rendermode InteractiveServer

    @using AGDPMS.Shared.Models
    @using AGDPMS.Shared.Services
    @using System.ComponentModel.DataAnnotations
    @inject NavigationManager NavManager
    @inject IQAService QAService
    `
    <PageTitle>Chỉnh sửa máy</PageTitle>

    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">QA / Quản lý Máy móc /</span> Chỉnh sửa</h4>

    @if (machine == null || machineTypes == null)
    {
        <div class="p-3">Đang tải thông tin...</div>
    }
    else
    {
        <EditForm Model="@machine" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="card">
                <h5 class="card-header">Chỉnh sửa: @machine.Name</h5>
                <div class="card-body">

                    <div class="row">
                        <div class="mb-3 col-md-6">
                            <label for="machineName" class="form-label">Tên máy</label>
                            <InputText id="machineName" class="form-control" @bind-Value="machine.Name" />
                            <ValidationMessage For="@(() => machine.Name)" />
                        </div>

                        <div class="mb-3 col-md-6">
                            <label for="machineTypeId" class="form-label">Loại máy</label>
                            <InputSelect id="machineTypeId" class="form-select" @bind-Value="machine.MachineTypeId">
                                <option value="0">-- Chọn loại máy --</option>
                                @foreach (var type in machineTypes)
                                {
                                    <option value="@type.Id">@type.Name</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => machine.MachineTypeId)" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="mb-3 col-md-6">
                            <label for="status" class="form-label">Trạng thái</label>
                            <InputSelect id="status" class="form-select" @bind-Value="machine.Status">
                                @foreach (var status in (MachineStatus[])Enum.GetValues(typeof(MachineStatus)))
                                {
                                    <option value="@status">@GetVietnameseStatus(status)</option>
                                }
                            </InputSelect>
                        </div>

                        <div class="mb-3 col-md-6">
                            <label for="maintenanceDate" class="form-label">Ngày bảo trì cuối</label>
                            <InputDate id="maintenanceDate" class="form-control" @bind-Value="machine.LastMaintenanceDate" />
                        </div>
                    </div>

                </div>
                <div class="card-footer">
                    <button type="submit" class="btn btn-primary me-2">Cập nhật</button>
                    <button type="button" class="btn btn-outline-secondary" @onclick="GoBack">Hủy</button>
                </div>
            </div>
        </EditForm>
    }

    @code {
        [Parameter]
        public int Id { get; set; }

        private AppMachine? machine;
        private List<AppMachineType>? machineTypes;

        protected override async Task OnInitializedAsync()
        {
            var machineTask = QAService.GetMachineByIdAsync(Id);
            var typesTask = QAService.GetMachineTypesAsync();

            await Task.WhenAll(machineTask, typesTask);

            machine = await machineTask;
            machineTypes = (await typesTask)?.ToList();

            if (machine == null)
            {
                GoBack(); 
            }
        }

        private async Task HandleSubmit()
        {
            if (machine == null) return;

            if (machine.MachineTypeId == 0)
            {
                Console.WriteLine("Vui lòng chọn loại máy");
                return;
            }

            try
            {
                await QAService.UpdateMachineAsync(machine);
                GoBack();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Lỗi khi cập nhật máy: {ex.Message}");
            }
        }

        private void GoBack()
        {
            NavManager.NavigateTo("/qa/machines");
        }

        private string GetVietnameseStatus(MachineStatus status)
        {
            return status switch
            {
                MachineStatus.Operational => "Hoạt động",
                MachineStatus.NeedsMaintenance => "Cần bảo trì",
                MachineStatus.Broken => "Bị hỏng",
                _ => status.ToString()
            };
        }
    }