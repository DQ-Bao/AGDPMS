@page "/login"

@using System.ComponentModel.DataAnnotations
@using AGDPMS.Shared.Services

@inject IAuthService Auth
@inject NavigationManager Nav

<PageTitle>Login</PageTitle>

<div class="d-flex align-items-center justify-content-center vh-100">
    <div class="card shadow-lg rounded-4 p-4" style="max-width: 400px; width: 100%;">
        <div class="card-body">
            <h3 class="text-center mb-4">Login</h3>

            <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label class="form-label">Phone Number</label>
                    <InputText @bind-Value="Input.PhoneNumber" class="form-control" type="tel" inputmode="tel" />
                    <ValidationMessage For="@(() => Input.PhoneNumber)" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Password</label>
                    <InputText @bind-Value="Input.Password" class="form-control" type="password" />
                    <ValidationMessage For="@(() => Input.Password)" />
                </div>

                <div class="d-flex justify-content-between align-items-center mb-3">
                    <a href="/forgot-password" class="text-decoration-none small">Forgot password?</a>
                </div>

                <button type="submit" class="btn btn-primary w-100" disabled="@IsLoading">
                    @if (IsLoading)
                    {
                        <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                        <text>Logging in...</text>
                    }
                    else
                    {
                        <text>Login</text>
                    }
                </button>

                @if (!string.IsNullOrEmpty(Message))
                {
                    <div class="alert alert-danger mt-3">@Message</div>
                }
            </EditForm>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private LoginModel Input { get; set; } = new();

    private string? Message = string.Empty;
    private bool IsLoading = false;

    public async Task LoginUser()
    {
        Message = string.Empty;
        IsLoading = true;
        try
        {
            var result = await Auth.LoginAsync(Input.PhoneNumber, Input.Password);
            if (result.Success)
                Nav.NavigateTo(result.RedirectUrl ?? "/");
            else
                Message = result.ErrorMessage ?? "Login failed";
        }
        catch (Exception ex)
        {
            Message = ex.Message;
        }
        finally
        {
            IsLoading = false;
        }
    }

    public class LoginModel
    {
        [Required, Phone]
        [Display(Name = "Phone Number")]
        public string PhoneNumber { get; set; } = string.Empty;

        [Required, DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; } = string.Empty;
    }
}
