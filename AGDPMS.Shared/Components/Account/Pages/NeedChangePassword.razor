@page "/need-change-password"
@layout AuthLayout

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization
@using AGDPMS.Shared.Components.Account.Layout
@using AGDPMS.Shared.Services

@attribute [Authorize]

@inject IAuthService Auth
@inject NavigationManager Nav

<PageTitle>Change your password</PageTitle>

<h3 class="text-center mb-4">Change your password</h3>
<EditForm Model="Input" OnValidSubmit="HandleChangePassword" method="post" FormName="need-change-password">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label class="form-label">New Password</label>
        <InputText @bind-Value="Input.NewPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => Input.NewPassword)" />
    </div>
    <button type="submit" class="btn btn-primary w-100" disabled="@IsLoading">
        @if (IsLoading)
        {
            <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
            <text>Submitting...</text>
        }
        else
        {
            <text>Change Password</text>
        }
    </button>
    @if (!string.IsNullOrEmpty(Message))
    {
        <div class="alert alert-danger mt-3">@Message</div>
    }
</EditForm>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private string? Message;
    private bool IsLoading = false;

    private async Task HandleChangePassword()
    {
        Message = string.Empty;
        IsLoading = true;
        var result = await Auth.ResetCurrentUserPasswordAsync(Input.NewPassword);
        IsLoading = false;
        if (result.Success) Nav.NavigateTo("/");
        else Message = result.ErrorMessage ?? "Something went wrong";
    }

    private class InputModel
    {
        [Required, MinLength(6)]
        [DataType(DataType.Password)]
        public string NewPassword { get; set; } = string.Empty;
    }
}
