@page "/verify-otp/{UserId:int}"
@using AGDPMS.Shared.Services
@inject IApiClient ApiClient
@inject NavigationManager Navigation

<div class="verify-otp-page">
    <div class="verify-otp-container">
        <h1>Verify OTP</h1>
        <p>The code will expire in 5 minutes.</p>
        <p>Enter the code sent to your phone.</p>
        
        <div class="form-group">
            <label for="otpCode">OTP Code</label>
            <input type="text" id="otpCode" @bind="otpCode" @oninput="OnOtpInput" maxlength="6" class="form-control" />
        </div>
        
        @if (!string.IsNullOrWhiteSpace(message))
        {
            <div class="error-message">@message</div>
        }
        
        <button @onclick="Verify" class="btn btn-primary" disabled="@isLoading">
            @if (isLoading)
            {
                <span>Verifying...</span>
            }
            else
            {
                <span>Verify</span>
            }
        </button>
        
        <button @onclick="Back" class="btn btn-secondary">Back</button>
    </div>
</div>

@code {
    [Parameter] public int UserId { get; set; }
    
    private string otpCode = string.Empty;
    private string? message;
    private bool isLoading = false;

    private void OnOtpInput(ChangeEventArgs e)
    {
        var value = e.Value?.ToString() ?? string.Empty;
        if (value.All(char.IsDigit))
        {
            otpCode = value;
        }
    }

    private async Task Verify()
    {
        message = null;
        isLoading = true;
        
        try
        {
            var result = await ApiClient.VerifyOtpAsync(new VerifyOtpRequest
            {
                UserId = UserId,
                Otp = otpCode
            });

            if (result?.Success == true && !string.IsNullOrEmpty(result.ResetToken))
            {
                Navigation.NavigateTo($"/reset-password/{result.ResetToken}");
            }
            else
            {
                message = result?.Message ?? "Verification failed";
            }
        }
        catch (Exception ex)
        {
            message = ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }

    private void Back()
    {
        Navigation.NavigateTo("/forgot-password");
    }
}


